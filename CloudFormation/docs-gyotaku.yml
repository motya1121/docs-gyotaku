AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  S3BucketName:
    Type: String
    Description: Bucket for storing archived data of web pages.
  DDBGTableName:
    Type: String
    Description: Dynamo DB table name
  CloudWatchAlermSNSArn:
    Type: String
  EmailSender:
    Type: String
  EmailReceivers:
    Description: Comma separated email addresses
    Type: String
  DocsGyotakuWatcherQueueName:
    Type: String
    Description: DocsGyotakuWatcherQueueName

Resources:
  # Event Rule
  EventRules:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: default
      Name: docs-gyotaku-watcher-triger
      ScheduleExpression: 'rate(1 hour)'
      Targets:
        - Arn: !GetAtt DocsGyotakuWatcherTrigger.Arn
          Id: docs-gyotaku-watcher-trigger
  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref DocsGyotakuWatcherTrigger
      Principal: 'events.amazonaws.com'
      SourceArn: !GetAtt EventRules.Arn

  # SQS
  DocsGyotakuWatcherQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref DocsGyotakuWatcherQueueName
      VisibilityTimeout: 180
  DocsGyotakuWatcherSQSTriger:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      Enabled: true
      EventSourceArn: !GetAtt DocsGyotakuWatcherQueue.Arn
      FunctionName: !Ref DocsGyotakuWatcher

  # Docs Watcher
  DocsGyotakuWatcherTriggerRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: docs-gyotaku-watcher-trigger-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DynamoDB
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'dynamodb:Scan'
                  - 'dynamodb:Query'
                Resource:
                  - !Join
                    - ''
                    - - !GetAtt DDBTable.Arn
                      - '/*'
                  - !GetAtt DDBTable.Arn
        - PolicyName: SQS
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'sqs:SendMessage'
                Resource:
                  - !GetAtt DocsGyotakuWatcherQueue.Arn
  DocsGyotakuWatcherTrigger:
    Type: AWS::Lambda::Function
    Properties:
      Description: checks if the dosument has been updated.
      FunctionName: docs-gyotaku-watcher-trigger
      Handler: lambda_function.lambda_handler
      MemorySize: 128
      Timeout: 180
      Role: !GetAtt DocsGyotakuWatcherRole.Arn
      Runtime: python3.9
      Code:
        ZipFile: |
          exports.hundler = function(event, context) {}
      Environment:
        Variables:
          DDBTablename: !Ref DDBTable
  DocsGyotakuWatcherTriggerVersion:
    Type: AWS::Lambda::Version
    Properties:
      Description: v1
      FunctionName: !Ref DocsGyotakuWatcherTrigger
  DocsGyotakuWatcherTriggerAlias:
    Type: AWS::Lambda::Alias
    Properties:
      FunctionName: !Ref DocsGyotakuWatcherTrigger
      FunctionVersion: !GetAtt DocsGyotakuWatcherTriggerVersion.Version
      Name: prod

  # Docs Watcher
  DocsGyotakuWatcherRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: docs-gyotaku-watcher-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaSQSQueueExecutionRole
      Policies:
        - PolicyName: DynamoDB
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'dynamodb:Updateitem'
                Resource:
                  - !Join
                    - ''
                    - - !GetAtt DDBTable.Arn
                      - '/*'
                  - !GetAtt DDBTable.Arn
  DocsGyotakuWatcher:
    Type: AWS::Lambda::Function
    Properties:
      Description: checks if the dosument has been updated.
      FunctionName: docs-gyotaku-watcher
      Handler: lambda_function.lambda_handler
      MemorySize: 128
      Timeout: 180
      Role: !GetAtt DocsGyotakuWatcherRole.Arn
      Runtime: python3.9
      Code:
        ZipFile: |
          exports.hundler = function(event, context) {}
      Environment:
        Variables:
          DDBTablename: !Ref DDBTable
  DocsGyotakuWatcherVersion:
    Type: AWS::Lambda::Version
    Properties:
      Description: v1
      FunctionName: !Ref DocsGyotakuWatcher
  DocsGyotakuWatcherAlias:
    Type: AWS::Lambda::Alias
    Properties:
      FunctionName: !Ref DocsGyotakuWatcher
      FunctionVersion: !GetAtt DocsGyotakuWatcherVersion.Version
      Name: prod

  # Docs Gyogtaku table
  DDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref DDBGTableName
      AttributeDefinitions:
        - AttributeName: 'PartitionKey'
          AttributeType: 'S'
        - AttributeName: 'SortKey'
          AttributeType: 'S'
        - AttributeName: 'timestamp'
          AttributeType: 'N'
      KeySchema:
        - AttributeName: 'PartitionKey'
          KeyType: HASH
        - AttributeName: 'SortKey'
          KeyType: RANGE
      LocalSecondaryIndexes:
        - IndexName: SiteData
          KeySchema:
            - AttributeName: 'PartitionKey'
              KeyType: HASH
            - AttributeName: 'timestamp'
              KeyType: RANGE
          Projection:
            ProjectionType: INCLUDE
            NonKeyAttributes:
              - SortKey
      ProvisionedThroughput:
        ReadCapacityUnits: 3
        WriteCapacityUnits: 3
      StreamSpecification:
        StreamViewType: NEW_IMAGE
  DynamoDBStreamToCreator:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn: !GetAtt DDBTable.StreamArn
      BatchSize: 1
      Enabled: True
      FunctionName: !GetAtt DocsGyotakuCreator.Arn
      StartingPosition: LATEST
  DynamoDBStreamToNotifier:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn: !GetAtt DDBTable.StreamArn
      BatchSize: 1
      Enabled: True
      FunctionName: !GetAtt DocsUpdateNotifier.Arn
      StartingPosition: LATEST

  ## Docs Gyotaku Creator
  DocsGyotakuCreatorRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: docs-gyotaku-creator-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaDynamoDBExecutionRole
      Policies:
        - PolicyName: 'S3'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action: 's3:PutObject'
                Resource:
                  - !Sub 'arn:aws:s3:::${S3BucketName}'
                  - !Sub 'arn:aws:s3:::${S3BucketName}/*'
        - PolicyName: 'DynamoQuery'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action: 'dynamodb:Query'
                Resource: !GetAtt DDBTable.Arn
  DocsGyotakuCreator:
    Type: AWS::Lambda::Function
    Properties:
      Description: create gyotaku
      FunctionName: docs-gyotaku-creator
      Handler: lambda_function.lambda_handler
      MemorySize: 128
      Role: !GetAtt DocsGyotakuCreatorRole.Arn
      Runtime: python3.9
      Timeout: 180
      Code:
        ZipFile: |
          exports.hundler = function(event, context) {}
      Environment:
        Variables:
          DDBTablename: !Ref DDBTable
          S3_BUCKET_NAME: !Ref S3BucketName
  DocsGyotakuCreatorVersion:
    Type: AWS::Lambda::Version
    Properties:
      Description: v1
      FunctionName: !Ref DocsGyotakuCreator
  DocsGyotakuCreatorAlias:
    Type: AWS::Lambda::Alias
    Properties:
      FunctionName: !Ref DocsGyotakuCreator
      FunctionVersion: !GetAtt DocsGyotakuCreatorVersion.Version
      Name: prod

  # Docs Gyotaku Notifier
  DocsGyotakuNotifierRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: docs-gyotaku-notifier-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaDynamoDBExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaSQSQueueExecutionRole
      Policies:
        - PolicyName: 'DynamoQuery'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'dynamodb:Query'
                  - 'dynamodb:Scan'
                Resource: !GetAtt DDBTable.Arn
        - PolicyName: send_mail
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ses:SendEmail
                  - ses:SendRawEmail
                Resource:
                  - arn:aws:ses:ap-northeast-1:532648218247:identity/*
  DocsUpdateNotifier:
    Type: AWS::Lambda::Function
    Properties:
      Description: notification docs updated infomation.
      FunctionName: docs-gyotaku-notifier
      Handler: lambda_function.lambda_handler
      MemorySize: 128
      Timeout: 180
      Role: !GetAtt DocsGyotakuNotifierRole.Arn
      Runtime: python3.9
      Code:
        ZipFile: |
          exports.hundler = function(event, context) {}
      Environment:
        Variables:
          DDBTablename: !Ref DDBGTableName
          EMAIL_SENDER: !Ref EmailSender
          EMAIL_RECEIVERS: !Ref EmailReceivers

  # Monitor
  DocsWatcherAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      Namespace: AWS/Lambda
      AlarmName: lambda-docs-gyotaku-watcher-failed
      AlarmActions:
        - !Ref CloudWatchAlermSNSArn
      MetricName: Errors
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 1
      Period: 60
      Statistic: Maximum
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: docs-gyotaku-watcher
  DocsGyotakuCreatorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      Namespace: AWS/Lambda
      AlarmName: lambda-docs-gyotaku-creator-failed
      AlarmActions:
        - !Ref CloudWatchAlermSNSArn
      MetricName: Errors
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 1
      Period: 60
      Statistic: Maximum
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: docs-gyotaku-creator
  DocsUpdateInfoEnqueueAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      Namespace: AWS/Lambda
      AlarmName: lambda-docs-gyotaku-notifier-failed
      AlarmActions:
        - !Ref CloudWatchAlermSNSArn
      MetricName: Errors
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 1
      Period: 60
      Statistic: Maximum
      TreatMissingData: notBreaching
      Dimensions:
        - Name: FunctionName
          Value: docs-gyotaku-notifier
